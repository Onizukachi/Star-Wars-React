{"version":3,"file":"static/js/152.9f58a514.chunk.js","mappings":"8IACA,QAA0B,6BAA1B,EAAyE,qCAAzE,EAA2H,gCAA3H,EAA2K,mCAA3K,EAA6N,kCAA7N,EAA6Q,iC,8BCG7Q,MA6BA,EA7BoBA,IAAsB,IAArB,YAAEC,GAAaD,EAChC,MAAOE,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,IAU7C,OARAC,EAAAA,EAAAA,YAAU,KACN,WACI,MAAMC,EAAaL,EAAYM,KAAIC,IAAOC,EAAAA,EAAAA,IAAWD,KAC/CE,QAAiBC,EAAAA,EAAAA,IAAsBL,GAC7CH,EAAcO,EACjB,EAJD,EAII,GACL,KAGCE,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,UAC3BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAuBC,SACjCb,EACIc,MAAK,CAACC,EAAGC,IAAMD,EAAEE,WAAaD,EAAEC,aAChCZ,KAAIa,IAA0B,IAAzB,MAACC,EAAK,WAAEF,GAAWC,EACrB,OACAE,EAAAA,EAAAA,MAAA,MAAIT,UAAWC,EAAkBC,SAAA,EAC7BO,EAAAA,EAAAA,MAAA,QAAMT,UAAWC,EAAqBC,SAAA,CAAC,WAASI,MAChDP,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAoBC,SAAC,QACtCH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAmBC,SAAEM,MAHHF,EAIlC,OAGf,C","sources":["webpack://react_star_wars/./src/components/PersonPage/PersonFilms/PersonFilms.module.css?02f6","components/PersonPage/PersonFilms/PersonFilms.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"PersonFilms_wrapper__I-kYf\",\"list__container\":\"PersonFilms_list__container__eyG8R\",\"list__item\":\"PersonFilms_list__item__HAFxt\",\"item__episode\":\"PersonFilms_item__episode__kJGFY\",\"item__column\":\"PersonFilms_item__column__SHtrM\",\"item__title\":\"PersonFilms_item__title__75iiB\"};","import styles from './PersonFilms.module.css';\nimport { useState, useEffect } from 'react';\nimport { makeConcurrentRequest, changeHTTP } from '@utils/network';\n\nconst PersonFilms = ({ personFilms }) => {\n    const [filmsNames, setFilmsNames] = useState([])\n\n    useEffect(() => {\n        (async () => {\n            const filmsHTTPS = personFilms.map(url => changeHTTP(url));\n            const response = await makeConcurrentRequest(filmsHTTPS);\n            setFilmsNames(response)\n        })()\n    }, [])\n\n    return (\n        <div className={styles.wrapper}>\n            <ul className={styles.list__container}>\n                {filmsNames\n                    .sort((a, b) => a.episode_id - b.episode_id)\n                    .map(({title, episode_id}) => {\n                        return (\n                        <li className={styles.list__item} key={episode_id}> \n                            <span className={styles.item__episode}>Episode {episode_id}</span>\n                            <span className={styles.item__column}>: </span>\n                            <span className={styles.item__title}>{title}</span>\n                        </li>)\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default PersonFilms;"],"names":["_ref","personFilms","filmsNames","setFilmsNames","useState","useEffect","filmsHTTPS","map","url","changeHTTP","response","makeConcurrentRequest","_jsx","className","styles","children","sort","a","b","episode_id","_ref2","title","_jsxs"],"sourceRoot":""}